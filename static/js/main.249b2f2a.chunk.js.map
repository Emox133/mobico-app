{"version":3,"sources":["utils/OwnButton.js","utils/switchError.js","redux/types.js","redux/actions/dataActions.js","components/posts/CreatePosts.js","redux/actions/userActions.js","components/profile/ChangePassword.js","components/Layout/Menu.js","components/profile/Notifications.js","utils/Emoji.js","components/profile/EditProfile.js","components/profile/EditProfileImage.js","components/Layout/UserAvatar.js","components/Layout/AuthBar.js","components/Layout/Navbar.js","pages/notFound.js","components/posts/Comments.js","components/posts/Post.js","components/posts/DeletePosts.js","components/posts/LikePosts.js","components/posts/CommentPost.js","components/posts/DislikePosts.js","components/posts/Posts.js","utils/Loader.js","components/profile/Profile.js","pages/home.js","pages/signup.js","components/profile/ForgotPassword.js","pages/login.js","pages/resetPassword.js","components/profile/DeleteProfile.js","pages/myProfile.js","utils/theme.js","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/reducers/dataReducer.js","redux/store.js","index.js","images/logo-mobico-5.png"],"names":["children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","switchError","obj","start","Object","values","startsWith","SET_ERRORS","fetchPosts","dispatch","type","axios","get","validateStatus","then","res","payload","data","posts","catch","err","console","log","getOnePost","id","status","types","message","withRouter","props","useState","open","setOpen","text","inputState","setInputState","errors","useSelector","state","UI","shallowEqual","useDispatch","handleClose","OwnButton","Dialog","onClose","aria-labelledby","fullWidth","onSubmit","e","preventDefault","history","post","createPostMsg","error","length","DialogTitle","DialogContent","TextField","autoFocus","helperText","margin","name","label","multiline","onChange","target","value","DialogActions","Button","color","logoutUser","push","localStorage","removeItem","defaults","headers","common","go","getUserData","updateProfile","patch","alert","setAuthorizationHeader","token","JWT","setItem","ChangePassword","forwardRef","ref","currentPassword","password","confirmPassword","fields","setFields","handleChange","handleSubmit","newPasswordMessage","changePassword","MenuItem","style","marginRight","DialogContentText","React","memo","link","setLink","currentTarget","Menu","anchorEl","getContentAnchorEl","keepMounted","Boolean","logout","icon","isActive","useMediaQuery","notifications","user","filter","n","read","Badge","badgeContent","placeholder","map","nType","time","moment","createdAt","fromNow","iconColor","key","component","Link","to","postId","Typography","fontSize","sender","handleClick","height","Emoji","role","aria-label","aria-hidden","symbol","EditProfile","firstName","lastName","email","bio","location","username","website","inputFields","setInputFields","closeHandler","fieldsHandler","EditProfileImage","encType","hidden","image","files","formData","FormData","append","document","getElementById","click","ImageAvatars","Avatar","alt","owner","src","AuthBar","userImage","userSmall","CreatePosts","Switch","mode","authenticated","appbar","userActions","textTransform","AppBar","position","Toolbar","justifyContent","notFound","Comments","comments","myComment","_id","commentId","belongsTo","delete","top","right","List","ListItem","ListItemAvatar","ownerName","ownerImage","ListItemText","variant","marginBottom","format","Divider","withStyles","theme","spreadThis","singlePost","rule","useEffect","display","maxWidth","classes","postImageSmall","postImage","width","marginTop","c","myPost","deleteButton","switch","LikePosts","like","likeCount","CommentPost","setText","commentErr","commentPost","rowsMax","likes","likeButton","find","l","DislikePosts","Card","cardSmall","card","CardMedia","CardContent","alignItems","DeletePosts","fontWeight","commentCount","Loader","anime","targets","translateY","duration","rotate","borderRadius","direction","easing","delay","random","loop","elasticity","loading","Paper","paper","imageWrapper","profileImage","Home","scrollRef","useRef","window","addEventListener","fetchedPosts","Grid","container","item","sm","xs","md","Fab","size","zIndex","bottom","current","scrollIntoView","behavior","formWrapper","AppLogo","logoSmall","logo","noValidate","autoComplete","form","userInfo","newUser","InputProps","startAdornment","InputAdornment","textField","rows","letterSpacing","ForgotPassword","setEmail","emailMessage","forgotPassword","assign","button","ResetPassword","pathname","split","resetMessage","gutterBottom","align","resetPassword","textAlign","DeleteProfile","setPostId","keys","match","params","notPost","openDialog","profile","themeObject","palette","primary","main","secondary","typography","fontFamily","paddingBottom","post__card","padding","objectFit","App","setTheme","updatedTheme","useDarkMode","toggleDarkMode","themeObj","createMuiTheme","authNavbar","exact","path","MyProfile","Signup","Login","NotFound","CssBaseline","basename","hostname","initialState","scrollEffect","reducers","combineReducers","action","notificationsCopy","forEach","deleteCopiedPosts","intactPosts","el","likeCopiedPosts","likePostIndex","findIndex","dislikeCopiedPosts","dislikePostIndex","commentCopiedPosts","commentPostIndex","copiedPosts","filteredComments","index","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","app","decoded","jwtDecode","Date","exp","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.249b2f2a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n  <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n","export const switchError = (obj, start) => {\r\n    let condition = typeof Object.values(obj)[0] === 'string' && Object.values(obj)[0].startsWith(start) ? true : false\r\n\r\n    // console.log('switch Error')\r\n    return condition\r\n};","// * User types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\nexport const SET_USER = 'SET_USER'\r\nexport const LOADING_DATA = 'LOADING_DATA'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const STOP_USER_LOADING = 'STOP_USER_LOADING'\r\nexport const NOTIFICATIONS_SEEN = 'NOTIFICATIONS_SEEN'\r\nexport const READ_NOTIFICATIONS = 'READ_NOTIFICATIONS'\r\n\r\n// * Ui types\r\nexport const SET_ERRORS = 'SET_ERRORS'\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\r\nexport const START_SCROLL_EFFECT = 'START_SCROLL_EFFECT'\r\n\r\n// * Data types\r\nexport const SET_POSTS = 'SET_POSTS'\r\nexport const SET_ONE_POST = 'SET_ONE_POST'\r\nexport const CREATE_POST = 'CREATE_POST'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const LOADING_FROM_DATA = 'LOADING_FROM_DATA'\r\nexport const STOP_LOADING = 'STOP_LOADING'\r\nexport const LIKE_POST = 'LIKE_POST'\r\nexport const DISLIKE_POST = 'DISLIKE_POST'\r\nexport const COMMENT_POST = 'COMMENT_POST'\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'","import * as types from './../types'\r\nimport axios from 'axios'\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n    dispatch({type: types.LOADING_FROM_DATA});\r\n    axios.get('/posts', {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_POSTS,\r\n            payload: res.data.data.posts\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const getOnePost = id => dispatch => {\r\n    axios.get(`/posts/${id}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        if(res.data.status !== 'error' && res.data.status !== 'fail') {\r\n            dispatch({\r\n                type: types.SET_ONE_POST,\r\n                payload: res.data.data\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {message: res.data.message}\r\n            })\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n};\r\n\r\nexport const createPost = data => dispatch => {\r\n    dispatch({type: types.LOADING_FROM_DATA});\r\n    axios.post('/posts', data, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        if(res.data.status !== 'error') {\r\n            dispatch({\r\n                type: types.CREATE_POST\r\n            })\r\n            dispatch(fetchPosts())\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {createPostMsg: res.data.message}\r\n            })\r\n            dispatch({type: types.STOP_LOADING})\r\n        }\r\n    })\r\n    .catch(err => console.error(err))\r\n};\r\n\r\nexport const deletePost = id => dispatch => {\r\n    dispatch({type: types.LOADING_FROM_DATA});\r\n    axios.delete(`/posts/${id}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        dispatch({type: types.DELETE_POST, id: id})\r\n        dispatch({type: types.START_SCROLL_EFFECT, switch: 'off'})\r\n    })\r\n    .catch(err => {\r\n        console.error(err)\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};\r\n\r\nexport const likePost = id => dispatch => {\r\n    axios.post(`/posts/${id}/like`, null, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        dispatch({type: types.LIKE_POST, id: id, payload: res.data.data.like})\r\n    })\r\n    .catch(err => console.error(err))\r\n};\r\n\r\nexport const dislikePost = id => dispatch => {\r\n    axios.post(`/posts/${id}/dislike`, null, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        dispatch({type: types.DISLIKE_POST, id: id})\r\n    })\r\n    .catch(err =>  {\r\n        // console.error(err)\r\n    })\r\n};\r\n\r\nexport const commentPost = (id, data) => dispatch => {\r\n    // dispatch({type: types.LOADING_FROM_DATA})\r\n    axios.post(`/posts/${id}/comment`, data, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error') {\r\n            dispatch({type: types.COMMENT_POST, id: id})\r\n            alert('Comment posted.')\r\n        }\r\n        else {\r\n            // dispatch({type: types.STOP_LOADING})\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {commentErr: res.data.message}\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const deleteComment = (commentId, id) => dispatch => {\r\n    // dispatch({type: types.LOADING_FROM_DATA})\r\n    axios.delete(`/posts/${id}/comment/${commentId}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({type: types.REMOVE_COMMENT, commentId: commentId, id: id})\r\n    }).catch(err => console.log(err))\r\n};","import React, {useState, Fragment} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport OwnButton from '../../utils/OwnButton'\r\nimport {switchError} from './../../utils/switchError'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {CLEAR_ERRORS} from './../../redux/types'\r\nimport {createPost} from '../../redux/actions/dataActions'\r\n\r\nconst FormDialog = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inputState, setInputState] = useState({text: ''})\r\n\r\n  const {errors} = useSelector(state => ({\r\n    errors: state.UI.errors\r\n  }), shallowEqual)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    dispatch({type: CLEAR_ERRORS})\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInputState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(createPost({text: inputState.text}, props.history, inputState.text))\r\n    if(inputState.text.length > 0) setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <OwnButton tip=\"Create Post\" onClick={handleClickOpen}>\r\n        <AddIcon />\r\n      </OwnButton>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth={true}>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">Create a post</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            error={switchError(errors, 'Post') ? true : false}\r\n            helperText={switchError(errors, 'Post') ? errors.createPostMsg : null}\r\n            margin=\"dense\"\r\n            id=\"text\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            label=\"Post\"\r\n            multiline={true}\r\n            fullWidth\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(FormDialog)\r\n","import * as types from './../types'\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userInfo, history) => dispatch => {\r\n    axios.post('/users/login', userInfo, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error' && res.data.token) {\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData())\r\n            history.push('/')\r\n            history.go(0)\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: Object.assign({message: res.data.message}, {}) || res.data.error\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const logoutUser = history => dispatch => {\r\n    history.push('/login')\r\n    localStorage.removeItem('token')\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({type: types.LOGOUT_USER})\r\n    history.go(0)\r\n};\r\n\r\nexport const signupUser = (userInfo, history) => dispatch => {\r\n    axios.post('users/signup', userInfo, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res.data)\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error' && res.data.token) {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData())\r\n            history.push('/')\r\n            history.go(0)\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: res.data.error.errors\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const getUserData = () => dispatch => {\r\n    dispatch({type: types.SET_AUTHENTICATED})\r\n    axios.get('users/me', {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_USER,\r\n            payload: res.data.data\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const updateProfile = data => dispatch => {\r\n    axios.patch('users/updateMe', data, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error') {\r\n            // console.log(res)\r\n            dispatch(getUserData());\r\n            alert('Data changed successfully. 😜')\r\n        } else {\r\n            // console.log(res)\r\n            dispatch({type: types.STOP_USER_LOADING})\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: res.data.error.errors\r\n            })\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.error(err)\r\n    })\r\n};\r\n\r\nexport const forgotPassword = (email, history) => dispatch => {\r\n    axios.post('/users/forgotPassword', email, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error') {\r\n            alert('Email sent!')\r\n            history.go(0)\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {emailMessage: res.data.message}\r\n            })\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n};\r\n\r\nexport const resetPassword = (token, data,  history) => dispatch => {\r\n    axios.post(`/users/resetPassword/${token}`, data, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error' && res.data.token) {\r\n            // console.log(res)\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData())\r\n            history.push('/')\r\n            alert('Password successfully changed! 🎉')\r\n        } else {\r\n            // console.log(res)\r\n            dispatch({type: types.STOP_USER_LOADING})\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {resetMessage: res.data.message}\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const changePassword = (data, history) => dispatch => {\r\n    dispatch({type: types.LOADING_DATA});\r\n    axios.patch('/users/updateMyPassword', data, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error') {\r\n            dispatch({type: types.STOP_USER_LOADING})\r\n            alert(`${res.data.message} 🎈 Please log in again 😃`);\r\n            dispatch(logoutUser(history))\r\n        } else {\r\n            // console.log(res)\r\n            dispatch({type: types.STOP_USER_LOADING})\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: {newPasswordMessage: res.data.message}\r\n            })\r\n        }\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n};\r\n\r\nexport const deleteProfile = history => dispatch => {\r\n    dispatch({type: types.LOADING_DATA})\r\n    axios.delete('/users/deleteMe', {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        if(res.data.status !== 'fail' && res.data.status !== 'error') {\r\n            dispatch({type: types.STOP_USER_LOADING})\r\n            dispatch(logoutUser(history))\r\n        } else {\r\n            dispatch({\r\n                type: types.SET_ERRORS,\r\n                payload: res.data.error\r\n            })\r\n        }\r\n    })\r\n    .catch(err => console.error(err))\r\n};\r\n\r\nexport const notificationsSeen = () => dispatch => {\r\n    axios.patch('/users/notifications', {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        // console.log(res)\r\n        dispatch({type: types.READ_NOTIFICATIONS})\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n};\r\n\r\nexport const scrollEffect = ref => dispatch => {\r\n    ref.current.scrollIntoView({behavior: \"smooth\"})\r\n}\r\n\r\nconst setAuthorizationHeader = token => {\r\n    const JWT = `Bearer ${token}`;\r\n    localStorage.setItem('token', JWT);\r\n    axios.defaults.headers.common['Authorization'] = JWT;\r\n};\r\n","import React, {useState, forwardRef} from 'react'\r\n// import Emoji from './../../utils/Emoji'\r\nimport {switchError} from './../../utils/switchError'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n// import IconButton from '@material-ui/core/IconButton'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {changePassword} from './../../redux/actions/userActions'\r\nimport {CLEAR_ERRORS} from './../../redux/types'\r\n\r\nconst ChangePassword = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [fields, setFields] = useState({\r\n        currentPassword: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        dispatch({type: CLEAR_ERRORS})\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        let data = {...fields}\r\n        dispatch(() => dispatch(changePassword(data, props.history)))\r\n        if(!Object.values(errors)) {\r\n            setOpen(false)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>   \r\n            <MenuItem onClick={handleOpen}>\r\n                <span style={{marginRight: '.5rem'}}>Change Password</span>\r\n                <VpnKeyIcon color=\"secondary\"/>\r\n            </MenuItem>\r\n            <Dialog open={open}>\r\n                <DialogTitle>\r\n                    Change Your Password \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please provide the data necessary to perform this action. \r\n                    </DialogContentText>\r\n                        <TextField \r\n                        // autoFocus\r\n                        id=\"currentPassword\"\r\n                        type=\"password\"\r\n                        name=\"currentPassword\"\r\n                        label=\"Current Password\"\r\n                        error={switchError(errors, 'Your') ? true : false}\r\n                        helperText={switchError(errors, 'Your') ? errors.newPasswordMessage : null}\r\n                        fullWidth\r\n                        onChange={e => handleChange(e)}\r\n                        />\r\n                        <TextField \r\n                        // autoFocus\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"New Password\"\r\n                        fullWidth\r\n                        error={switchError(errors, 'User') ? true : false}\r\n                        helperText={switchError(errors, 'User') ? errors.newPasswordMessage : null}\r\n                        onChange={e => handleChange(e)}\r\n                        />\r\n                        <TextField \r\n                        // autoFocus\r\n                        id=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        error={switchError(errors, 'User') ? true : false} \r\n                        helperText={switchError(errors, 'User') ? errors.newPasswordMessage : null}\r\n                        fullWidth\r\n                        onChange={e => handleChange(e)}\r\n                        />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default React.memo(ChangePassword)\r\n","import React, {useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport ChangePassword from './../profile/ChangePassword'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Settings = props => {\r\n    const [link, setLink] = useState(null)\r\n\r\n    const handleClose = () => {\r\n        setLink(null);\r\n    };\r\n\r\n    const handleClick = e => {\r\n        setLink(e.currentTarget);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Settings\">\r\n                <IconButton onClick={handleClick}>\r\n                    <SettingsIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={link}\r\n                getContentAnchorEl={null}\r\n                // anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                // transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                keepMounted\r\n                open={Boolean(link)}\r\n                onClose={handleClose}\r\n            >\r\n            <ChangePassword history={props.history}/>\r\n            <MenuItem onClick={props.logout}>\r\n                <span style={{marginRight: '.5rem'}}>Logout</span>\r\n                <ExitToAppIcon color=\"secondary\"/>\r\n            </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Settings)\r\n","import React, {useState} from 'react'\r\nimport moment from 'moment'\r\nimport {withRouter, Link} from 'react-router-dom'\r\n// import Post from './../posts/Post'\r\n\r\nimport Badge from '@material-ui/core/Badge'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport {notificationsSeen} from './../../redux/actions/userActions'\r\n\r\nconst Notifications = props => {\r\n    const [link, setLink] = useState(null)\r\n    const isActive = useMediaQuery('(max-width: 768px)')\r\n\r\n    const {notifications} = useSelector(state => ({\r\n        notifications: state.user.notifications\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = e => {\r\n        setLink(e.currentTarget)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLink(null)\r\n    };\r\n    \r\n    const onNotificationsVisited = () => {\r\n        // notifications.filter(n => n.read);\r\n        dispatch(notificationsSeen());\r\n    };\r\n\r\n    let icon;\r\n    if(notifications && notifications.length > 0) {\r\n        notifications.filter(n => n.read === false).length > 0\r\n        ? icon = (\r\n            <Badge badgeContent={notifications.filter(n => n.read === false).length} color=\"secondary\">\r\n                <NotificationsIcon onClick={onNotificationsVisited}/>\r\n            </Badge>\r\n        ) : icon = <NotificationsIcon />\r\n    } else {\r\n        icon = <NotificationsIcon />\r\n    }\r\n\r\n    let placeholder = \r\n    notifications && notifications.length > 0 ? (\r\n        notifications.map(n => {\r\n            const nType = n.type === 'like' ? 'liked' : 'commented';\r\n            const time = moment(n.createdAt).fromNow();\r\n            const iconColor = n.read ? 'primary' : 'secondary';\r\n            const icon = n.type === 'like' ? <FavoriteIcon color={iconColor} style={{ marginRight: 10 }}/> \r\n            : <ChatIcon color={iconColor} style={{marginRight: 10}}/>\r\n            \r\n            return (\r\n                <MenuItem\r\n                key={n.createdAt}\r\n                    onClick={handleClose}\r\n                    component={Link}\r\n                    to={`/me/posts/${n.postId}`}\r\n                    >\r\n                    {icon}\r\n                    <Typography style={{fontSize: '.7rem'}}> \r\n                        {n.sender} {nType} your post {time}\r\n                    </Typography>\r\n                </MenuItem>\r\n            )\r\n        })\r\n    ) : (\r\n        <MenuItem onClick={handleClose}>\r\n            You have no notifications yet.\r\n        </MenuItem>\r\n    )\r\n    \r\n    return (\r\n        <div>\r\n        <Tooltip title=\"Notifications\">\r\n            <IconButton onClick={e => handleClick(e)}>\r\n                {icon}\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            style={{height: isActive ? '75%' : '100%'}}\r\n            anchorEl={link}\r\n            keepMounted\r\n            // anchorOrigin={{ vertical: \"right\", horizontal: \"right\" }}\r\n            // transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            open={Boolean(link)}\r\n            onClose={handleClose}\r\n            // onClick={onNotificationsRead}\r\n        >\r\n            {placeholder}\r\n        </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Notifications)\r\n","import React from 'react';\r\n\r\nconst Emoji = props => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;","import React, {Fragment, useState} from 'react'\r\nimport Emoji from './../../utils/Emoji'\r\n\r\n// MUI\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';import IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\n// Redux\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {CLEAR_ERRORS} from './../../redux/types'\r\nimport {updateProfile} from './../../redux/actions/userActions'\r\n\r\nconst EditProfile = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [inputFields, setInputFields] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        bio: '',\r\n        location: '',\r\n        username: '',\r\n        website: ''\r\n    })\r\n\r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual);\r\n\r\n    const {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        location,\r\n        username,\r\n    } = errors\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openHandler = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const closeHandler = () => {\r\n        setOpen(false);\r\n        dispatch({type: CLEAR_ERRORS})\r\n    };\r\n\r\n    const fieldsHandler = e => {\r\n        setInputFields({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = {...inputFields}\r\n        dispatch(updateProfile(data, props.history));\r\n        if(!Object.values(errors)) setOpen(false);\r\n    };\r\n\r\n    return (\r\n    <Fragment>\r\n            <Tooltip title=\"Edit profile\" onClick={openHandler}>\r\n                <IconButton>\r\n                    <AssignmentIndIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Dialog open={open} onClose={closeHandler} >\r\n                <form onSubmit={handleSubmit}>\r\n                <DialogTitle>\r\n                   Edit your profile details <Emoji symbol=\"✍\" label=\"edit\"/>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                         <span role=\"img\" aria-label=\"note\">Note ✔</span> Feel free to change fields individualy but be aware that the field validation is still on.\r\n                    </DialogContentText>\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        error={firstName ? true : false}\r\n                        helperText={firstName ? firstName.message : null}\r\n                        label=\"First name\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        error={lastName ? true : false}\r\n                        helperText={lastName ? lastName.message : null}\r\n                        label=\"Last name\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        error={email ? true : false}\r\n                        helperText={email ? email.message : null}\r\n                        label=\"E-mail\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"bio\"\r\n                        name=\"bio\"\r\n                        type=\"text\"\r\n                        label=\"Biography\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"location\"\r\n                        name=\"location\"\r\n                        type=\"text\"\r\n                        error={location ? true : false}\r\n                        helperText={location ? location.message : null}\r\n                        label=\"Location\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        error={username ? true : false}\r\n                        helperText={username ? username.message : null}\r\n                        label=\"Username\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        autoFocus\r\n                        id=\"website\"\r\n                        name=\"website\"\r\n                        type=\"text\"\r\n                        label=\"Website\"\r\n                        onChange={e => fieldsHandler(e)}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                 <Button onClick={closeHandler} color=\"secondary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                    Confirm\r\n                </Button>\r\n                </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","import React, {Fragment} from 'react'\r\n\r\n// Mui\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';import Tooltip from '@material-ui/core/Tooltip'\r\n\r\n// Redux\r\nimport {useDispatch} from 'react-redux'\r\nimport {updateProfile} from './../../redux/actions/userActions'\r\n\r\nconst EditProfileImage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleImage = e => {\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('photo', image, image.name);\r\n        dispatch(updateProfile(formData));\r\n    };\r\n\r\n    const handleImageChange = () => {\r\n        const file = document.getElementById('image__input');\r\n        file.click();\r\n    };\r\n\r\n    return (\r\n    <Fragment>\r\n        <form encType=\"multipart/form-data\" >\r\n            <input \r\n            type=\"file\" \r\n            name=\"photo\"\r\n            id=\"image__input\"\r\n            hidden=\"hidden\"\r\n            onChange={handleImage}\r\n            />\r\n        </form>\r\n    <Tooltip title=\"Change profile image\">\r\n        <IconButton onClick={handleImageChange}>\r\n            <PhotoCameraIcon />\r\n        </IconButton>\r\n    </Tooltip>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfileImage\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nexport default function ImageAvatars(props) {\r\n  return <Avatar alt={props.owner} src={props.image} />\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport CreatePosts from '../posts/CreatePosts'\r\nimport Menu from './../Layout/Menu'\r\nimport Notifications from './../profile/Notifications'\r\nimport EditProfile from './../profile/EditProfile'\r\nimport EditProfileImage from './../profile/EditProfileImage'\r\nimport UserAvatar from './UserAvatar'\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\n\r\nconst AuthBar = (props) => {\r\n    const {username, userImage} = useSelector(state => ({\r\n        username: state.user.user.username,\r\n        userImage: state.user.user.userImage\r\n    }), shallowEqual)\r\n\r\n    const isActive = useMediaQuery('(max-width: 960px)')\r\n    let userSmall = \r\n    <Tooltip title={`${username}`}>\r\n        <IconButton component={Link} to={'/me'}>\r\n            <UserAvatar owner={username} image={userImage}/>\r\n        </IconButton>\r\n    </Tooltip>\r\n\r\n    return (\r\n        <Fragment>\r\n            {isActive ? userSmall : null}\r\n            <Tooltip title=\"Home\">\r\n                <IconButton component={Link} to=\"/\">\r\n                    <HomeIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <CreatePosts />\r\n            {!isActive ?\r\n            <Tooltip title=\"Profile\">\r\n                <IconButton component={Link} to=\"/me\">\r\n                    <AccountCircleIcon />\r\n                </IconButton>\r\n            </Tooltip> : null\r\n            }\r\n            <Notifications />\r\n            {isActive ? <EditProfileImage /> : null}\r\n            {isActive ? <EditProfile /> : null}\r\n            <Tooltip title=\"Day / Night\">\r\n                <Switch onClick={props.mode} />\r\n            </Tooltip>\r\n            <Menu logout={props.logout}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AuthBar\r\n","import React, {Fragment} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport AuthBar from './AuthBar'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport * as userActions from './../../redux/actions/userActions'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\n// import IconButton from '@material-ui/core/IconButton'\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst Navbar = props => {\r\n    const {authenticated} = useSelector(state => ({\r\n        authenticated: state.user.authenticated\r\n    }), shallowEqual)\r\n    \r\n    const dispatch = useDispatch()\r\n    let appbar = authenticated ? (\r\n        <AuthBar logout={() => dispatch(userActions.logoutUser(props.history))} mode={props.mode}/>\r\n        ) : (\r\n        <Fragment>\r\n            <Button color=\"inherit\" component={Link} to=\"/\" style={{textTransform: 'capitalize'}}>Signup</Button>\r\n                {/* <IconButton component={Link} to=\"/\">\r\n                    <HomeIcon />\r\n                </IconButton> */}\r\n            <Button color=\"inherit\" component={Link} to=\"/login\" style={{textTransform: 'capitalize'}}>Login</Button>\r\n        </Fragment>\r\n    )\r\n    \r\n        return (\r\n            <AppBar position={authenticated ? 'sticky' : 'relative'} style={{height: authenticated ? '100vh' : null}} color=\"primary\">\r\n                <Toolbar className={authenticated ? 'nav__toolbar' : null} style={{justifyContent: !authenticated ? 'center' : null}}>\r\n                    {appbar}\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","import React from 'react'\r\n\r\nconst notFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error 404 (Not Found)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default notFound\r\n","import React, {Fragment} from 'react'\r\nimport moment from 'moment'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {deleteComment} from './../../redux/actions/dataActions'\r\n\r\nconst Comments = React.memo(props => {\r\n    const {user} = useSelector(state => ({\r\n        user: state.user.user\r\n    }), shallowEqual)\r\n    const dispatch = useDispatch();\r\n    \r\n    const {comments} = props;\r\n    const isActive = useMediaQuery('(max-width: 375px)')\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteComment(comments._id, comments.belongsTo));\r\n    }\r\n\r\n    let myComment = user._id === comments.owner ? <Tooltip title=\"Delete comment\">\r\n        <IconButton onClick={handleDelete} style={{position: 'absolute', top: '.3rem', right: isActive ? '-.8rem' : '0'}}>\r\n            <CancelIcon color=\"secondary\"/>\r\n        </IconButton>\r\n    </Tooltip> : null\r\n\r\n    return (\r\n        <List>\r\n            <ListItem className=\"posts__comment\">\r\n                    {myComment}\r\n                <ListItemAvatar>\r\n                    <Avatar alt={comments.ownerName} src={comments.ownerImage}/>\r\n                </ListItemAvatar>\r\n                <ListItemText>\r\n                    <Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"h6\"\r\n                            style={{fontSize: isActive ? '.88rem' : '1.125rem'}}\r\n                        >\r\n                            {comments.ownerName}\r\n                        </Typography>\r\n                        <Typography \r\n                            variant=\"subtitle2\"\r\n                            style={{marginBottom: '.5rem', fontSize: isActive ? '.6rem' : '.8rem'}}\r\n                        >\r\n                            {moment(comments.createdAt).format(\"MMMM Do YYYY, h:mm a\")}\r\n                        </Typography>\r\n                        <Typography style={{fontSize: isActive ? '.8rem' : '1rem'}}>\r\n                            {\" - \" + comments.text}\r\n                        </Typography>\r\n                    </Fragment>\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"hr\"/>\r\n        </List>\r\n    )\r\n})\r\n\r\nexport default Comments\r\n","import React, {useState, useEffect} from 'react'\r\nimport Comments from './Comments'\r\nimport moment from 'moment'\r\n\r\nimport withStyles from '@material-ui/styles/withStyles'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {getOnePost} from './../../redux/actions/dataActions'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst Post = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const {post, comments} = useSelector(state => ({\r\n        post: state.data.singlePost.post,\r\n        comments: state.data.singlePost.comments,\r\n    }), shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    let {rule, postId} = props\r\n    const isActive = useMediaQuery('(max-width: 600px)')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        dispatch(getOnePost(props.id))\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        postId = null;\r\n        return rule ? props.history.push('/me') : null \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(rule) {\r\n            setOpen(true)\r\n            dispatch(getOnePost(postId))\r\n        }\r\n    }, [rule, postId, dispatch]);\r\n    \r\n    // console.log(props.postId ? true : false, props.postId)\r\n\r\n    return (\r\n        <div style={{display: props.postId ? 'none' : null}}>\r\n            <IconButton onClick={handleOpen}>\r\n                <ExpandMoreIcon />\r\n            </IconButton>\r\n                <Dialog open={open} maxWidth=\"md\" onClose={handleClose}> \r\n                    <DialogActions>\r\n                        <span onClick={handleClose} style={{fontSize: '2rem', marginRight: '.5rem'}}>\r\n                            &times;\r\n                        </span>\r\n                    </DialogActions>\r\n                <div className=\"posts__individual\" style={{height: isActive ? '90vh' : null}}>\r\n                    <img src={post.userImage} alt={post.owner} className={isActive ? props.classes.postImageSmall : props.classes.postImage}/>\r\n                        <Typography variant={isActive ? \"h4\" : \"h3\"}>\r\n                            {post.owner}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {moment(post.createdAt).fromNow()}\r\n                        </Typography>\r\n                    <DialogContent style={{width: isActive ? '100%' : '80%'}}>\r\n                        <Typography>\r\n                            {post.text}\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" style={{marginTop: '1rem', height: '1.9rem'}}>\r\n                            Comments\r\n                        </Typography>\r\n                        {comments.map(c => {\r\n                            return <Comments key={c._id} comments={c} id={post._id}/>\r\n                        })}\r\n                    </DialogContent>\r\n                </div> \r\n                </Dialog> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Post)\r\n","import React, {useState, Fragment} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport OwnButton from '../../utils/OwnButton'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {deletePost} from '../../redux/actions/dataActions'\r\n\r\nconst FormDialog = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const {user} = useSelector(state => ({\r\n    user: state.user.user\r\n  }), shallowEqual)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(props.id))\r\n  };\r\n\r\n  let myPost = `${user.firstName} ${user.lastName}`;\r\n\r\n  let deleteButton = props.owner === myPost ? \r\n  <OwnButton tip=\"Delete Post\" onClick={handleClickOpen}>\r\n    <DeleteIcon color=\"secondary\" /> \r\n  </OwnButton> : null\r\n\r\n  return (\r\n    <Fragment>\r\n      {deleteButton}\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth={true}>\r\n      <form>\r\n        <DialogTitle id=\"form-dialog-title\">Are you sure you want to delete this post?</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"button\" color=\"secondary\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(FormDialog)\r\n","import React, {Fragment} from 'react'\r\nimport OwnButton from './../../utils/OwnButton'\r\n\r\n// MUI\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\n// Redux\r\nimport {useDispatch} from 'react-redux'\r\nimport {likePost} from './../../redux/actions/dataActions'\r\n\r\nconst LikePosts = props => {\r\n    const {post} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLike = () => {\r\n        dispatch(likePost(post._id))\r\n    };  \r\n\r\n    return (\r\n        <Fragment>\r\n            <OwnButton tip=\"Like Post\" onClick={handleLike}>\r\n               <FavoriteBorderIcon color=\"primary\"/>\r\n            </OwnButton>\r\n            <span style={{fontSize: '.8rem'}}>{post.likeCount} Likes</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LikePosts\r\n","import React, {useState} from 'react'\r\nimport {switchError} from './../../utils/switchError'\r\n\r\n// import Typography from '@material-ui/core/Typography'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {commentPost} from './../../redux/actions/dataActions'\r\nimport {CLEAR_ERRORS} from './../../redux/types'\r\n\r\nconst CommentPost = props => {\r\n    const [open, setOpen] = useState(false);\r\n    const [text, setText] = useState({text: ''})\r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        dispatch({type: CLEAR_ERRORS})\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setText({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        let data = {...text}\r\n        dispatch(commentPost(props.id, data));\r\n        if(text.text.length > 0) setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Tooltip title=\"Comment post\">\r\n                <IconButton onClick={handleOpen}>\r\n                    <ChatBubbleIcon color=\"primary\"/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Dialog open={open} onClose={handleClose} fullWidth={true}>\r\n                <DialogTitle>\r\n                    Comment post \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {/* Comment this post. */}\r\n                    </DialogContentText>\r\n                    <TextField \r\n                        id=\"text\"\r\n                        name=\"text\"\r\n                        // label=\"Comment\"\r\n                        // placeholder=\"Comment\"\r\n                        placeholder=\"Nice one ! 😃🔥\"\r\n                        type=\"text\"\r\n                        error={switchError(errors, 'Comment') ? true : false}\r\n                        helperText={switchError(errors, 'Comment') ? errors.commentErr : null}\r\n                        fullWidth\r\n                        multiline\r\n                        rowsMax={5}\r\n                        onChange={e => handleChange(e)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <Button type=\"submit\" onClick={e => handleSubmit(e)}>\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CommentPost\r\n","import React, {Fragment} from 'react'\r\nimport OwnButton from '../../utils/OwnButton'\r\n\r\n// MUI\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n// Redux\r\nimport {useDispatch} from 'react-redux'\r\nimport {dislikePost} from '../../redux/actions/dataActions'\r\n\r\nconst LikePosts = props => {\r\n    const {post} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDislike = () => {\r\n        dispatch(dislikePost(post._id))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <OwnButton tip=\"Dislike Post\" onClick={handleDislike}>\r\n               <FavoriteIcon color=\"primary\"/>\r\n            </OwnButton>\r\n            <span>{post.likeCount} Likes</span>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LikePosts\r\n","import React from 'react'\r\nimport Post from './Post'\r\nimport moment from 'moment'\r\nimport DeletePosts from './DeletePosts'\r\nimport LikePosts from './LikePosts'\r\nimport CommentPost from './CommentPost'\r\nimport DislikePosts from './DislikePosts'\r\n\r\n// * Mui\r\nimport withStyles from '@material-ui/styles/withStyles'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst Posts = props => {\r\n    const isActive = useMediaQuery('(max-width: 960px)');\r\n\r\n    const {post, classes} = props\r\n    const {likes} = useSelector(state => ({\r\n        likes: state.user.likes\r\n    }), shallowEqual)\r\n\r\n    let likedPost = () => {\r\n        if (likes && likes.find(l => l.belongsTo === post._id))\r\n        return true\r\n        else return false\r\n    }\r\n\r\n    // console.log(props.post ? true : false)\r\n\r\n    let likeButton = likedPost() ? <DislikePosts post={post} /> : <LikePosts post={post}/>\r\n\r\n    return (\r\n            <Card className={isActive ? classes.cardSmall : classes.card}>\r\n                    <CardMedia \r\n                        className={classes.userImage}\r\n                        image={post.userImage}\r\n                        title=\"User\"/>\r\n                    <CardContent>\r\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '2rem'}}>\r\n                        <Typography className={classes.owner}>\r\n                            {post.owner}\r\n                        </Typography>\r\n                            <DeletePosts id={post._id} owner={post.owner}/>\r\n                    </div>\r\n                        <Typography style={{fontWeight: 'bold', marginBottom: '.5rem'}}>\r\n                            {moment(post.createdAt).fromNow()}\r\n                        </Typography>\r\n\r\n                        <Typography className={classes.text}>\r\n                            {post.text}\r\n                        </Typography>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {likeButton}\r\n                        <CommentPost id={post._id}/>\r\n                            <span style={{fontSize: '.8rem'}}>{post.commentCount} Comments</span>\r\n                        <Post id={post._id}/>\r\n                    </div>\r\n                    </CardContent>\r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Posts)\r\n","import React, {useEffect} from 'react'\r\nimport {useMediaQuery} from '@material-ui/core'\r\nimport anime from 'animejs'\r\n\r\nconst Loader = () => {\r\n    const isActive = useMediaQuery('(max-width: 960px)')\r\n\r\n    useEffect(() => {\r\n        anime ({\r\n            targets: 'div.box',\r\n            translateY: [\r\n                {value: 200, duration: 500},\r\n                {value: 0, duration: 800}\r\n            ],\r\n            // loop: true,\r\n            rotate: {\r\n                value: '1turn'\r\n            },\r\n            borderRadius: 50,\r\n            direction: 'alternate',\r\n            easing: 'easeInOutQuad',\r\n            delay: function() {return anime.random(0, 1000);},\r\n            loop: true,\r\n            elasticity: 200\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"boxes\" style={{width: isActive ? 'calc(100% - 54.4px)' : null, height: isActive ? '100vh' : null}}>\r\n            <div className=\"box one\"></div>\r\n            <div className=\"box two\"></div>\r\n            <div className=\"box three\"></div>\r\n            <div className=\"box four\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport EditProfile from './EditProfile'\r\nimport EditProfileImage from './EditProfileImage'\r\nimport Loader from './../../utils/Loader'\r\n\r\n// * Mui\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// * Redux\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst Profile = props => {\r\n    const {user, loading} = useSelector(state => ({\r\n        user: state.user.user,\r\n        loading: state.user.loading\r\n    }), shallowEqual);\r\n    \r\n        const {classes} = props\r\n        const {userImage, firstName, lastName, username,location, website, bio} = user\r\n\r\n        let profile = user && !loading ? \r\n            <Paper className={classes.paper}>\r\n                <div className={classes.imageWrapper}>\r\n                    <img src={userImage} className={classes.profileImage} alt=\"profile\" />\r\n                    <EditProfileImage />\r\n                    <EditProfile history={props.history}/>\r\n                    <Typography variant=\"h4\">\r\n                        {firstName} {lastName}\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                        @{username}\r\n                    </Typography>\r\n                    <Typography>\r\n                        {location}\r\n                    </Typography>\r\n                    {website ? (\r\n                        <Typography>\r\n                            {website}\r\n                        </Typography>\r\n                    ) : null}\r\n                    {bio ? (\r\n                        <Typography>\r\n                            {bio}\r\n                        </Typography>\r\n                    ) : null}\r\n                </div>\r\n            </Paper>\r\n         : <Loader />\r\n       \r\n        return profile\r\n         \r\n}\r\n\r\nexport default withStyles(styles)(Profile)","import React, {useRef} from 'react'\r\nimport Posts from './../components/posts/Posts'\r\nimport Profile from './../components/profile/Profile'\r\nimport Loader from './../utils/Loader'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {fetchPosts} from './../redux/actions/dataActions'\r\nimport {scrollEffect} from './../redux/actions/userActions'\r\nimport { Fab } from '@material-ui/core'\r\n\r\nconst Home = (props) => {\r\n    const scrollRef = useRef(null);\r\n    const dispatch = useDispatch()\r\n\r\n    const {posts, loading} = useSelector(state => ({\r\n        posts: state.data.posts,\r\n        post: state.data.post,\r\n        loading: state.data.loading,\r\n    }), shallowEqual)\r\n\r\n    window.addEventListener('load', () => {\r\n        if(posts.length === 0) {\r\n            dispatch(fetchPosts())\r\n        }\r\n    })\r\n\r\n        let fetchedPosts = !loading ? (\r\n           posts.map(post => <Posts key={post._id} post={post}/>)\r\n        ) : <Loader /> \r\n\r\n        return (\r\n            <Grid container style={{position: 'relative'}}>\r\n               <Grid item sm={12} xs={12} md={7}>\r\n                    {fetchedPosts}\r\n                <Tooltip title=\"Scroll to bottom\">\r\n                    <Fab \r\n                        color=\"primary\" \r\n                        size=\"small\" \r\n                        style={{position: 'fixed', zIndex: '10000', bottom: '1rem', right: '.8rem'}}\r\n                        onClick={scrollEffect(scrollRef)}\r\n                        >\r\n                        <ArrowDownwardIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n                    <div ref={scrollRef}></div>\r\n                </Grid> \r\n                <Grid item md={5}>\r\n                    <Profile history={props.history}/>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport AppLogo from './../images/logo-mobico-5.png'\r\n\r\n// * Mui\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport StarsIcon from '@material-ui/icons/Stars'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n// * Redux\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {signupUser} from './../redux/actions/userActions'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst Signup = props => {\r\n    const [fields, setFields] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        bio: '',\r\n        website: '',\r\n        location: ''\r\n    })\r\n\r\n    const isActive = useMediaQuery('(max-width: 650px)')\r\n   \r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual)\r\n    \r\n    const dispatch = useDispatch()\r\n    const {classes} = props\r\n\r\n    const handleChange = e => {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            firstName: fields.firstName,\r\n            lastName: fields.lastName,\r\n            username: fields.username,\r\n            email: fields.email,\r\n            password: fields.password,\r\n            confirmPassword: fields.confirmPassword,\r\n            bio: fields.bio,\r\n            website: fields.website,\r\n            location: fields.location\r\n        }\r\n\r\n        dispatch(signupUser(newUser, props.history));\r\n    }\r\n\r\n        return (\r\n        <Grid container className={classes.formWrapper}>\r\n            <Grid item xs/>\r\n                <Grid item xs>\r\n                <img src={AppLogo} alt=\"mobico logo\" className={isActive ? classes.logoSmall : classes.logo}/>\r\n                <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField \r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    error={errors.firstName ? true : false}\r\n                    helperText={errors.firstName ? errors.firstName.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                    }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.firstName}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                    type=\"text\"\r\n                    error={errors.lastName ? true : false}\r\n                    helperText={errors.lastName ? errors.lastName.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.lastName}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    helperText={errors.username ? errors.username.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.username}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    error={errors.email ? true : false}\r\n                    helperText={errors.email ? errors.email.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.email}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    helperText={errors.password ? errors.password.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.password}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    error={errors.confirmPassword ? true : false}\r\n                    helperText={errors.confirmPassword ? errors.confirmPassword.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.confirmPassword}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    placeholder=\"Location\"\r\n                    type=\"text\"\r\n                    error={errors.location ? true : false}\r\n                    helperText={errors.location ? errors.location.message : null}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Tooltip title=\"Required\" placement=\"top\">\r\n                                <StarsIcon />\r\n                            </Tooltip>\r\n                        </InputAdornment>\r\n                        )\r\n                      }}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.location}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"website\"\r\n                    name=\"website\"\r\n                    placeholder=\"Website\"\r\n                    type=\"text\"\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.website}\r\n                    fullWidth\r\n                    />\r\n                     <TextField \r\n                    id=\"bio\"\r\n                    name=\"bio\"\r\n                    placeholder=\"Biography\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    rows=\"3\"\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.bio}\r\n                    fullWidth\r\n                    />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{marginTop: '10px'}}>\r\n                            Signup\r\n                        </Button>\r\n                    </form>\r\n                    <Typography style={{marginTop: '.7rem', fontSize: isActive ? '1rem' : '1.3rem'}}>\r\n                        &copy; Developed and designed by <span style={{fontWeight: 'bold', letterSpacing: '.05em'}}>Emir Salihović</span>\r\n                    </Typography>\r\n                </Grid>\r\n            <Grid item xs />\r\n        </Grid>\r\n        )\r\n}\r\n\r\nexport default withStyles(styles)(Signup)\r\n","import React, {Fragment, useState} from 'react'\r\nimport Emoji from './../../utils/Emoji'\r\n// import {withRouter}\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport SendIcon from '@material-ui/icons/Send'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {forgotPassword} from './../../redux/actions/userActions'\r\nimport {CLEAR_ERRORS} from './../../redux/types'\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [email, setEmail] = useState({email: ''})\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        dispatch({type: CLEAR_ERRORS})\r\n    }\r\n    \r\n    const handleChange = e => {\r\n        setEmail({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({type: CLEAR_ERRORS})\r\n        dispatch(forgotPassword(email, props.history))\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n                <Button color=\"primary\" onClick={handleOpen} style={{marginTop: '.5rem'}}>\r\n                    Forgot Password <LiveHelpIcon />\r\n                </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <form onSubmit={e => handleSubmit(e)}>\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Forgot your password ? <Emoji symbol=\"🔐\" label=\"password\"/>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please provide us with your e-mail so that we can help you generate new password.\r\n                    </DialogContentText>\r\n                    <TextField \r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"email\"\r\n                        id=\"e-mail\"\r\n                        error={errors.emailMessage ? true : false}\r\n                        helperText={errors.emailMessage ? errors.emailMessage : null}\r\n                        label=\"E-mail\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={e => handleChange(e)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Send <SendIcon />\r\n                    </Button>\r\n                </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </Fragment>   \r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useState } from 'react'\r\nimport AppLogo from './../images/logo-mobico-5.png'\r\nimport ForgotPassword from './../components/profile/ForgotPassword'\r\n\r\n// * Redux\r\nimport {useSelector, useDispatch, shallowEqual} from 'react-redux'\r\nimport {loginUser} from './../redux/actions/userActions'\r\n\r\n// * Mui\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport {useMediaQuery} from '@material-ui/core'\r\n// import SnackBar from './../utils/SnackBar'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst Login = props => {\r\n    const [fields, setFields] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {errors} = useSelector(state => ({\r\n        errors: state.UI.errors\r\n    }), shallowEqual)\r\n    \r\n    const {classes} = props\r\n    const dispatch = useDispatch()\r\n    const isActive = useMediaQuery('(max-width: 650px)')\r\n\r\n   const handleChange = e => {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n   const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {email, password} = fields\r\n\r\n        const user = {\r\n            email: email,\r\n            password: password\r\n        }   \r\n        \r\n        dispatch(loginUser(user, props.history));\r\n    }\r\n    \r\n        return (\r\n        <Grid container className={classes.formWrapper}>\r\n            <Grid item xs />\r\n                <Grid item xs>\r\n                <img src={AppLogo} alt=\"mobico logo\" className={isActive ? classes.logoSmall : classes.logo}/>\r\n                <form noValidate autoComplete=\"on\" className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField \r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    error={errors.message ? true : false}\r\n                    helperText={errors.message ? errors.message : null}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.email}\r\n                    fullWidth\r\n                    />\r\n                    <TextField \r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    error={errors.message ? true : false}\r\n                    helperText={errors.message ? errors.message : null}\r\n                    className={classes.textField}\r\n                    onChange={handleChange}\r\n                    value={fields.password}\r\n                    fullWidth\r\n                    />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{marginTop: '10px'}} className={classes.button}>\r\n                            Login\r\n                        </Button>\r\n                    </form>\r\n                        <ForgotPassword history={props.history}/>\r\n                        {/* <SnackBar /> */}\r\n                </Grid>\r\n            <Grid item xs />\r\n        </Grid>\r\n        )\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, {Fragment, useState} from 'react'\r\nimport Emoji from './../utils/Emoji'\r\nimport Loader from './../utils/Loader'\r\nimport {switchError} from './../utils/switchError'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {resetPassword} from './../redux/actions/userActions'\r\nimport {CLEAR_ERRORS} from './../redux/types'\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\nconst ResetPassword = (props) => {\r\n    const [fields, setFields] = useState({\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const {errors, loading} = useSelector(state => ({\r\n        errors: state.UI.errors,\r\n        loading: state.user.loading\r\n    }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n    const token = props.location.pathname.split('/')[2];\r\n    const isActive = useMediaQuery('(max-width: 768px)')\r\n\r\n    const handleChange = e => {\r\n        setFields({\r\n            ...fields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    if(switchError(errors, 'Token')) {\r\n        alert(errors.resetMessage)\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({type: CLEAR_ERRORS})\r\n        const data = {\r\n            password: fields.password,\r\n            confirmPassword: fields.confirmPassword\r\n        }\r\n        dispatch(resetPassword(token, data, props.history))\r\n    }\r\n\r\n    let placeholder = !loading ? \r\n        <Fragment>\r\n            <Typography variant={isActive ? 'h4' : 'h3'} gutterBottom align=\"center\" style={{marginTop: '2rem'}}>\r\n                Reset Your Password <Emoji symbol=\"🔓\" label=\"emoji\"/>\r\n            </Typography>\r\n            <form onSubmit={handleSubmit} style={{width: isActive ? '65%' : '35%', margin: '0 auto', textAlign: 'center'}}>\r\n                <TextField \r\n                autoFocus\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                error={switchError(errors, 'User') ? true : false}\r\n                helperText={switchError(errors, 'User') ? errors.resetMessage : null}\r\n                fullWidth\r\n                style={{marginBottom: '.5rem'}}\r\n                onChange={e => handleChange(e)}\r\n                />\r\n                <TextField \r\n                autoFocus\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                error={switchError(errors, 'User') ? true : false}\r\n                helperText={switchError(errors, 'User') ? errors.resetMessage : null}\r\n                fullWidth\r\n                onChange={e => handleChange(e)}\r\n                />\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\" size=\"small\" style={{marginTop: '.5rem'}}>\r\n                    Submit\r\n                </Button>\r\n            </form>    \r\n    </Fragment>\r\n     : <Loader />\r\n\r\n    return placeholder\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, {Fragment, useState} from 'react'\r\nimport Emoji from './../../utils/Emoji'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {deleteProfile} from './../../redux/actions/userActions'\r\n\r\nconst DeleteProfile = props => {\r\n    const [open, setOpen] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n        <Tooltip title=\"Delete profile\" placement=\"left\">\r\n            <DeleteForeverIcon onClick={handleOpen} className=\"profile__user-delete\" fontSize=\"large\" />\r\n        </Tooltip>\r\n       <Dialog open={open}>\r\n           <DialogTitle>\r\n               Delete Profile ? \r\n               <Emoji symbol=\"😪\" label=\"sad face\"/>\r\n           </DialogTitle>\r\n           <DialogContent>\r\n               <DialogContentText>\r\n                    Are you sure you want to delete your profile ?\r\n                    Once you agree there is no going back.\r\n               </DialogContentText>\r\n           </DialogContent>\r\n           <DialogActions>\r\n               <Button type=\"submit\" color=\"secondary\" onClick={() => dispatch(deleteProfile(props.history))}>\r\n                   Delete\r\n               </Button>\r\n               <Button onClick={handleClose}>\r\n                   Cancel\r\n               </Button>\r\n           </DialogActions>\r\n       </Dialog>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteProfile\r\n","import React, {useEffect, useState} from 'react'\r\nimport Emoji from './../utils/Emoji'\r\nimport Loader from './../utils/Loader'\r\nimport DeleteProfile from './../components/profile/DeleteProfile'\r\nimport Post from './../components/posts/Post'\r\nimport LikePosts from './../components/posts/LikePosts'\r\nimport DislikePosts from './../components/posts/DislikePosts'\r\nimport DeletePosts from './../components/posts/DeletePosts'\r\nimport CommentPost from './../components/posts/CommentPost'\r\nimport moment from 'moment'\r\n\r\nimport withStyles from '@material-ui/styles/withStyles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {fetchPosts} from './../redux/actions/dataActions'\r\n\r\nconst styles = theme => ({\r\n    ...theme.spreadThis\r\n})\r\n\r\nconst MyProfile = props => {\r\n    const [postId, setPostId] = useState(null)\r\n\r\n    const {user, posts, likes, loading} = useSelector(state => ({\r\n        user: state.user.user ? state.user.user : {} ,\r\n        posts: state.data.posts,\r\n        loading: state.user.loading,\r\n        likes: state.user.likes\r\n    }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n    const {classes} = props;\r\n\r\n    useEffect(() => {\r\n        if(posts.length === 0) {\r\n            dispatch(fetchPosts());\r\n        }\r\n    }, [dispatch, posts]);\r\n\r\n\r\n    let rule;\r\n    if(Object.keys(props.match.params).length > 0 && Object.keys(props.match.params)[0] === 'postId') {\r\n        rule = true; \r\n    } else {\r\n        rule = false;\r\n    }\r\n    useEffect(() => {\r\n        if(rule) {\r\n            setPostId(props.match.params.postId)\r\n        } \r\n    }, [props.match.params, rule])\r\n\r\n    let notPost = postId ? <Post postId={postId} openDialog history={props.history} rule={rule}/> : null\r\n\r\n    const owner = `${user.firstName} ${user.lastName}` \r\n    const myPosts = posts.filter(post => post.owner === owner);\r\n\r\n    let placeholder = myPosts.map(post => {\r\n        let likedPost = () => {\r\n            if (likes && likes.find(l => l.belongsTo === post._id))\r\n            return true\r\n            else return false\r\n        }\r\n\r\n        let likeButton = likedPost() ? <DislikePosts post={post} /> : <LikePosts post={post}/>\r\n        return (\r\n            <Card className={classes.card} key={post._id} variant=\"outlined\">\r\n                    <CardMedia \r\n                        className={classes.userImage}\r\n                        image={post.userImage}\r\n                        title=\"User\"/>\r\n                    <CardContent>\r\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '2rem'}}>\r\n                        <Typography className={classes.owner}>\r\n                            {post.owner}\r\n                        </Typography>\r\n                            <DeletePosts id={post._id} owner={post.owner}/>\r\n                    </div>\r\n                        <Typography style={{fontWeight: 'bold', marginBottom: 'bold'}}>\r\n                            {moment(post.createdAt).fromNow()}\r\n                        </Typography>\r\n\r\n                        <Typography className={classes.text}>\r\n                            {post.text}\r\n                        </Typography>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {likeButton}\r\n                        <CommentPost id={post._id}/>\r\n                            <span style={{fontSize: '.8rem'}}>{post.commentCount} Comments</span>\r\n                        <Post id={post._id}/>\r\n                    </div>\r\n                    </CardContent>\r\n            </Card>\r\n        )\r\n    })\r\n\r\n    let profile = !loading ? (\r\n        <figure className=\"profile__user-avatar\">\r\n            <img src={user.userImage} alt=\"avatar\" className=\"profile__user-img\" />\r\n                <DeleteProfile history={props.history}/>\r\n            <figcaption className=\"profile__user-details\">\r\n                <h2 className=\"profile__user-title\">{user.firstName + ' ' + user.lastName}</h2>\r\n                <p className=\"profile__user-location\">Location: {user.location}</p>\r\n                <p className=\"profile__user-bio\">{user.bio.length > 0 ? 'Biography:' : null} {user.bio}</p>\r\n                <p className=\"profile__user-bio\">{user.bio.length > 0 ? 'Website:' : null} {user.website}</p>\r\n            </figcaption>\r\n        </figure>\r\n    ) : <Loader />\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__user\">\r\n                {profile}\r\n            </div>\r\n\r\n            <Paper component=\"div\" className=\"profile__posts\">\r\n                <h2 className=\"posts__title\">\r\n                    Posts timeline <Emoji symbol=\"📕\" label=\"post notes\"/>\r\n                    {notPost}\r\n                </h2>\r\n                <div className=\"posts\">\r\n                    {placeholder}\r\n                </div>\r\n            </Paper>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MyProfile)\r\n","import {useState} from 'react'\r\n\r\nconst themeObject = {\r\npalette: {\r\n  // primary: { main: '#f44336' },\r\n  primary: { main: '#00c9ff' },\r\n  secondary: { main: '#ff0011' },\r\n  type: 'light'\r\n},\r\n\r\nspreadThis: {\r\n  typography: {\r\n    fontFamily: 'Courgette'\r\n  },\r\n  formWrapper: {\r\n    height: '100%',\r\n    textAlign: 'center',\r\n    paddingBottom: '30px',\r\n    // overflow: 'scroll'\r\n  },\r\n    logo: {\r\n      width: '300px',\r\n      marginTop: '-30px'\r\n    },\r\n    title: {\r\n      fontSize: '40px',\r\n      letterSpacing: '5px'\r\n    },\r\n    textField: {\r\n      marginBottom: '5px'\r\n    },\r\n    owner: {\r\n      fontSize: '20px',\r\n      fontWeight: 'bold',\r\n      alignItems: 'center'\r\n    },\r\n    card: {\r\n      maxWidth: '300px',\r\n      marginBottom: '10px',\r\n      // border: '1px solid #fff'\r\n    },\r\n    post__card: {\r\n      // boxShadow: '1rem 0 3rem rgba(0,0,0,.8)',\r\n\r\n      '&:hover': {\r\n        // transform: 'scale(.95)'\r\n      }\r\n    },\r\n    userImage: {\r\n      height: '200px',\r\n      width: '100%',\r\n      // backgroundSize: 'cover',\r\n      // backgroundPosition: 'center',\r\n\r\n      '&:hover': {\r\n      //  ...\r\n      }\r\n      // borderRadius: '0px'\r\n    },\r\n    paper: {\r\n      height: '100vh',\r\n      padding: '20px',\r\n      position: 'fixed'\r\n    },\r\n    imageWrapper: {\r\n      textAlign: 'center',\r\n    },\r\n    profileImage: {\r\n      height: '250px',\r\n      width: '50%',\r\n      borderRadius: '50%',\r\n      objectFit: 'fill'\r\n    },\r\n    postImage:{\r\n      height: '250px',\r\n      width: '30%',\r\n      borderRadius: '50%'\r\n    },\r\n\r\n    // MEDIA QUERY STYLING\r\n    cardSmall: {\r\n      maxWidth: '400px',\r\n      margin: '0 auto 10px auto'\r\n    },\r\n    postImageSmall: {\r\n      height: '160px',\r\n      width: '50%',\r\n      borderRadius: '50%',\r\n      marginBottom: '.8rem'\r\n    },\r\n    logoSmall: {\r\n      width: '245px',\r\n      marginTop: '-30px'\r\n    }\r\n  }\r\n}\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(themeObject);\r\n\r\n  const {palette: {type}} = theme;\r\n  const toggleDarkMode = () => {\r\n    const updatedTheme = {\r\n      ...theme,\r\n      palette: {\r\n        ...theme.palette,\r\n        type: type === 'light' ? 'dark' : 'light'\r\n      }\r\n    }\r\n    setTheme(updatedTheme);\r\n  };\r\n\r\n  return [theme, toggleDarkMode];\r\n};","import React from 'react'\nimport './App.css'\nimport {HashRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nimport Navbar from './components/Layout/Navbar'\nimport NotFound from './pages/notFound'\n// import LandingPage from './pages/landingPage'\nimport Home from './pages/home'\nimport Signup from './pages/signup'\nimport Login from './pages/login'\nimport ResetPassword from './pages/resetPassword'\nimport MyProfile from './pages/myProfile'\n\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport MuiThemeProvider from '@material-ui/styles/ThemeProvider'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {useDarkMode} from './utils/theme'\n\nimport {useSelector, shallowEqual} from 'react-redux'\n\nconst App = () => {\n  const [theme, toggleDarkMode] = useDarkMode();\n  let themeObj = createMuiTheme(theme)\n  \n  const {authenticated} = useSelector(state => ({\n    authenticated: state.user.authenticated\n  }), shallowEqual)\n  \n    let authNavbar = authenticated ? (\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/me/posts/:postId\" component={MyProfile} />\n        <Route path=\"/me\" component={MyProfile}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    ) : \n    <Switch>\n      <Route exact path=\"/\" component={Signup}/>\n      {/* <Route path=\"/signup\" component={Signup}/> */}\n      <Route path=\"/login\" component={Login}/>\n      <Route path=\"/resetPassword/:token\" component={ResetPassword}/>\n      <Route component={NotFound}/>\n    </Switch>\n\n    return (\n    <MuiThemeProvider theme={themeObj}>\n      <CssBaseline />\n     <Router basename=\"/\">\n      <div className={authenticated ? 'App' : 'App-auth'}>\n       <Navbar mode={toggleDarkMode}/>\n       {authNavbar}\n      </div>\n     </Router>\n    </MuiThemeProvider>\n    )\n  }\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    likes: [],\r\n    notifications: [],\r\n    authenticated: false,\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.LOGOUT_USER: \r\n            return initialState\r\n\r\n        case types.SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: true\r\n            }\r\n        case types.SET_USER: \r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case types.LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.STOP_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case types.LIKE_POST: \r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.DISLIKE_POST: \r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(l => l.belongsTo !== action.id)\r\n            }\r\n\r\n        case types.READ_NOTIFICATIONS:\r\n                let notificationsCopy = [...state.notifications]\r\n                notificationsCopy.forEach(n => n.read = true)\r\n                return {\r\n                    ...state,\r\n                    notifications: notificationsCopy\r\n                }\r\n\r\n        default: \r\n            return state\r\n    }\r\n} ","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    errors: {},\r\n    scrollEffect: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case types.SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors: action.payload\r\n            }\r\n        case types.CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                errors: {}\r\n            }\r\n        \r\n        case types.START_SCROLL_EFFECT:\r\n            return {\r\n                ...state,\r\n                scrollEffect: action.switch === 'off' ? false : true\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    singlePost: {\r\n        post: [],\r\n        comments: []\r\n    },\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case types.SET_POSTS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                posts: action.payload\r\n            }\r\n\r\n        case types.SET_ONE_POST:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                singlePost: action.payload\r\n            }\r\n        \r\n        case types.CREATE_POST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        case types.DELETE_POST:\r\n            let deleteCopiedPosts = [...state.posts]\r\n            let intactPosts = deleteCopiedPosts.filter(el => el._id !== action.id)\r\n            return {\r\n                ...state,\r\n                posts: intactPosts,\r\n                loading: false\r\n            }\r\n\r\n        case types.LIKE_POST: \r\n            let likeCopiedPosts = [...state.posts]\r\n            let likePostIndex = likeCopiedPosts.findIndex(el => el._id === action.id)\r\n            likeCopiedPosts[likePostIndex].likeCount += 1\r\n            return {\r\n                ...state,\r\n                posts: likeCopiedPosts,\r\n                // loading: false\r\n            }\r\n\r\n        case types.DISLIKE_POST:\r\n            let dislikeCopiedPosts = [...state.posts]\r\n            let dislikePostIndex = dislikeCopiedPosts.findIndex(el => el._id === action.id)\r\n            dislikeCopiedPosts[dislikePostIndex].likeCount -= 1\r\n            return {\r\n                ...state,\r\n                posts: dislikeCopiedPosts\r\n                // loading: false\r\n            }\r\n        \r\n        case types.LOADING_FROM_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.STOP_LOADING: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case types.COMMENT_POST: \r\n            let commentCopiedPosts = [...state.posts]\r\n            let commentPostIndex = commentCopiedPosts.findIndex(el => el._id === action.id)\r\n            commentCopiedPosts[commentPostIndex].commentCount += 1;\r\n\r\n            return {\r\n                ...state,\r\n                posts: commentCopiedPosts\r\n            }\r\n\r\n        case types.REMOVE_COMMENT: \r\n            let singlePost = {...state.singlePost}\r\n            let copiedPosts = [...state.posts]\r\n            let filteredComments = singlePost.comments.filter(c => c._id !== action.commentId)\r\n            let index = copiedPosts.findIndex(el => el._id === action.id)\r\n            copiedPosts[index].commentCount -= 1;\r\n\r\n            return {\r\n                ...state,\r\n                posts: copiedPosts,\r\n                singlePost: {\r\n                    post: singlePost.post,\r\n                    comments: filteredComments\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, compose, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer from './reducers/userReducer'\r\nimport uiReducer from './reducers/uiReducer'\r\nimport dataReducer from './reducers/dataReducer'\r\n\r\nconst initialState = {}\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    UI: uiReducer,\r\n    data: dataReducer \r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n}) : compose;\r\n\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(...middleware),\r\n  // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport {getUserData} from './redux/actions/userActions'\nimport {LOGOUT_USER, SET_AUTHENTICATED} from './redux/types'\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nconst token = localStorage.token;\n\nif(token) {\n  const decoded = jwtDecode(token)\n\n  if(new Date(decoded.exp * 1000) < new Date()) {\n    // !EXPIRED\n    store.dispatch({type: LOGOUT_USER})\n  } else {\n    store.dispatch({type: SET_AUTHENTICATED})\n    axios.defaults.headers.common['Authorization'] = `${token}`;\n    store.dispatch(getUserData())\n  }\n}\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-mobico-5.e6d997b0.png\";"],"sourceRoot":""}